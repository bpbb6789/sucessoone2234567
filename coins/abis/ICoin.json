[
  {
    "type": "function",
    "name": "airlock",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "burn",
    "inputs": [
      {
        "name": "amount",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "coinType",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint8",
        "internalType": "enum IHasCoinType.CoinType"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "contractURI",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "string",
        "internalType": "string"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "currency",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "dopplerFeeRecipient",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getPayoutSwapPath",
    "inputs": [
      {
        "name": "coinVersionLookup",
        "type": "address",
        "internalType": "contract IDeployedCoinVersionLookup"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "tuple",
        "internalType": "struct IHasSwapPath.PayoutSwapPath",
        "components": [
          {
            "name": "path",
            "type": "tuple[]",
            "internalType": "struct PathKey[]",
            "components": [
              {
                "name": "intermediateCurrency",
                "type": "address",
                "internalType": "Currency"
              },
              {
                "name": "fee",
                "type": "uint24",
                "internalType": "uint24"
              },
              {
                "name": "tickSpacing",
                "type": "int24",
                "internalType": "int24"
              },
              {
                "name": "hooks",
                "type": "address",
                "internalType": "contract IHooks"
              },
              {
                "name": "hookData",
                "type": "bytes",
                "internalType": "bytes"
              }
            ]
          },
          {
            "name": "currencyIn",
            "type": "address",
            "internalType": "Currency"
          }
        ]
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getPoolConfiguration",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "tuple",
        "internalType": "struct PoolConfiguration",
        "components": [
          {
            "name": "version",
            "type": "uint8",
            "internalType": "uint8"
          },
          {
            "name": "numPositions",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "fee",
            "type": "uint24",
            "internalType": "uint24"
          },
          {
            "name": "tickSpacing",
            "type": "int24",
            "internalType": "int24"
          },
          {
            "name": "numDiscoveryPositions",
            "type": "uint16[]",
            "internalType": "uint16[]"
          },
          {
            "name": "tickLower",
            "type": "int24[]",
            "internalType": "int24[]"
          },
          {
            "name": "tickUpper",
            "type": "int24[]",
            "internalType": "int24[]"
          },
          {
            "name": "maxDiscoverySupplyShare",
            "type": "uint256[]",
            "internalType": "uint256[]"
          }
        ]
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getPoolKey",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "tuple",
        "internalType": "struct PoolKey",
        "components": [
          {
            "name": "currency0",
            "type": "address",
            "internalType": "Currency"
          },
          {
            "name": "currency1",
            "type": "address",
            "internalType": "Currency"
          },
          {
            "name": "fee",
            "type": "uint24",
            "internalType": "uint24"
          },
          {
            "name": "tickSpacing",
            "type": "int24",
            "internalType": "int24"
          },
          {
            "name": "hooks",
            "type": "address",
            "internalType": "contract IHooks"
          }
        ]
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "hooks",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "contract IHooks"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "initialize",
    "inputs": [
      {
        "name": "payoutRecipient_",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "owners_",
        "type": "address[]",
        "internalType": "address[]"
      },
      {
        "name": "tokenURI_",
        "type": "string",
        "internalType": "string"
      },
      {
        "name": "name_",
        "type": "string",
        "internalType": "string"
      },
      {
        "name": "symbol_",
        "type": "string",
        "internalType": "string"
      },
      {
        "name": "platformReferrer_",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "currency_",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "poolKey_",
        "type": "tuple",
        "internalType": "struct PoolKey",
        "components": [
          {
            "name": "currency0",
            "type": "address",
            "internalType": "Currency"
          },
          {
            "name": "currency1",
            "type": "address",
            "internalType": "Currency"
          },
          {
            "name": "fee",
            "type": "uint24",
            "internalType": "uint24"
          },
          {
            "name": "tickSpacing",
            "type": "int24",
            "internalType": "int24"
          },
          {
            "name": "hooks",
            "type": "address",
            "internalType": "contract IHooks"
          }
        ]
      },
      {
        "name": "sqrtPriceX96",
        "type": "uint160",
        "internalType": "uint160"
      },
      {
        "name": "poolConfiguration_",
        "type": "tuple",
        "internalType": "struct PoolConfiguration",
        "components": [
          {
            "name": "version",
            "type": "uint8",
            "internalType": "uint8"
          },
          {
            "name": "numPositions",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "fee",
            "type": "uint24",
            "internalType": "uint24"
          },
          {
            "name": "tickSpacing",
            "type": "int24",
            "internalType": "int24"
          },
          {
            "name": "numDiscoveryPositions",
            "type": "uint16[]",
            "internalType": "uint16[]"
          },
          {
            "name": "tickLower",
            "type": "int24[]",
            "internalType": "int24[]"
          },
          {
            "name": "tickUpper",
            "type": "int24[]",
            "internalType": "int24[]"
          },
          {
            "name": "maxDiscoverySupplyShare",
            "type": "uint256[]",
            "internalType": "uint256[]"
          }
        ]
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "payoutRecipient",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "platformReferrer",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "protocolRewardRecipient",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "address",
        "internalType": "address"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "setNameAndSymbol",
    "inputs": [
      {
        "name": "newName",
        "type": "string",
        "internalType": "string"
      },
      {
        "name": "newSymbol",
        "type": "string",
        "internalType": "string"
      }
    ],
    "outputs": [],
    "stateMutability": "nonpayable"
  },
  {
    "type": "function",
    "name": "supportsInterface",
    "inputs": [
      {
        "name": "interfaceId",
        "type": "bytes4",
        "internalType": "bytes4"
      }
    ],
    "outputs": [
      {
        "name": "",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "tokenURI",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "string",
        "internalType": "string"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "totalSupplyForPositions",
    "inputs": [],
    "outputs": [
      {
        "name": "",
        "type": "uint256",
        "internalType": "uint256"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "event",
    "name": "CoinBuy",
    "inputs": [
      {
        "name": "buyer",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "recipient",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "tradeReferrer",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "coinsPurchased",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "currency",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amountFee",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "amountSold",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "CoinMarketRewards",
    "inputs": [
      {
        "name": "payoutRecipient",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "platformReferrer",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "protocolRewardRecipient",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "currency",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "marketRewards",
        "type": "tuple",
        "indexed": false,
        "internalType": "struct ICoin.MarketRewards",
        "components": [
          {
            "name": "totalAmountCurrency",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "totalAmountCoin",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "creatorPayoutAmountCurrency",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "creatorPayoutAmountCoin",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "platformReferrerAmountCurrency",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "platformReferrerAmountCoin",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "protocolAmountCurrency",
            "type": "uint256",
            "internalType": "uint256"
          },
          {
            "name": "protocolAmountCoin",
            "type": "uint256",
            "internalType": "uint256"
          }
        ]
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "CoinPayoutRecipientUpdated",
    "inputs": [
      {
        "name": "caller",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "prevRecipient",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "newRecipient",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "CoinSell",
    "inputs": [
      {
        "name": "seller",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "recipient",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "tradeReferrer",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "coinsSold",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "currency",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "amountFee",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "amountPurchased",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "CoinTradeRewards",
    "inputs": [
      {
        "name": "payoutRecipient",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "platformReferrer",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "tradeReferrer",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "protocolRewardRecipient",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "creatorReward",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "platformReferrerReward",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "traderReferrerReward",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "protocolReward",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "currency",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "CoinTransfer",
    "inputs": [
      {
        "name": "sender",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "recipient",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "amount",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "senderBalance",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      },
      {
        "name": "recipientBalance",
        "type": "uint256",
        "indexed": false,
        "internalType": "uint256"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "ContractMetadataUpdated",
    "inputs": [
      {
        "name": "caller",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "newURI",
        "type": "string",
        "indexed": false,
        "internalType": "string"
      },
      {
        "name": "name",
        "type": "string",
        "indexed": false,
        "internalType": "string"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "ContractURIUpdated",
    "inputs": [],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "LiquidityMigrated",
    "inputs": [
      {
        "name": "fromPoolKey",
        "type": "tuple",
        "indexed": false,
        "internalType": "struct PoolKey",
        "components": [
          {
            "name": "currency0",
            "type": "address",
            "internalType": "Currency"
          },
          {
            "name": "currency1",
            "type": "address",
            "internalType": "Currency"
          },
          {
            "name": "fee",
            "type": "uint24",
            "internalType": "uint24"
          },
          {
            "name": "tickSpacing",
            "type": "int24",
            "internalType": "int24"
          },
          {
            "name": "hooks",
            "type": "address",
            "internalType": "contract IHooks"
          }
        ]
      },
      {
        "name": "fromPoolKeyHash",
        "type": "bytes32",
        "indexed": false,
        "internalType": "bytes32"
      },
      {
        "name": "toPoolKey",
        "type": "tuple",
        "indexed": false,
        "internalType": "struct PoolKey",
        "components": [
          {
            "name": "currency0",
            "type": "address",
            "internalType": "Currency"
          },
          {
            "name": "currency1",
            "type": "address",
            "internalType": "Currency"
          },
          {
            "name": "fee",
            "type": "uint24",
            "internalType": "uint24"
          },
          {
            "name": "tickSpacing",
            "type": "int24",
            "internalType": "int24"
          },
          {
            "name": "hooks",
            "type": "address",
            "internalType": "contract IHooks"
          }
        ]
      },
      {
        "name": "toPoolKeyHash",
        "type": "bytes32",
        "indexed": false,
        "internalType": "bytes32"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "NameAndSymbolUpdated",
    "inputs": [
      {
        "name": "caller",
        "type": "address",
        "indexed": true,
        "internalType": "address"
      },
      {
        "name": "newName",
        "type": "string",
        "indexed": false,
        "internalType": "string"
      },
      {
        "name": "newSymbol",
        "type": "string",
        "indexed": false,
        "internalType": "string"
      }
    ],
    "anonymous": false
  },
  {
    "type": "error",
    "name": "AddressZero",
    "inputs": []
  },
  {
    "type": "error",
    "name": "CannotMintZeroLiquidity",
    "inputs": []
  },
  {
    "type": "error",
    "name": "DopplerPoolMustHaveMoreThan2DiscoveryPositions",
    "inputs": []
  },
  {
    "type": "error",
    "name": "ERC20TransferAmountMismatch",
    "inputs": []
  },
  {
    "type": "error",
    "name": "EthAmountMismatch",
    "inputs": []
  },
  {
    "type": "error",
    "name": "EthAmountTooSmall",
    "inputs": []
  },
  {
    "type": "error",
    "name": "EthTransferFailed",
    "inputs": []
  },
  {
    "type": "error",
    "name": "EthTransferInvalid",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InitialOrderSizeTooLarge",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InsufficientFunds",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InsufficientLiquidity",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidCurrencyLowerTick",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidMarketType",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidPoolVersion",
    "inputs": []
  },
  {
    "type": "error",
    "name": "InvalidTickRangeMisordered",
    "inputs": [
      {
        "name": "tickLower",
        "type": "int24",
        "internalType": "int24"
      },
      {
        "name": "tickUpper",
        "type": "int24",
        "internalType": "int24"
      }
    ]
  },
  {
    "type": "error",
    "name": "InvalidWethLowerTick",
    "inputs": []
  },
  {
    "type": "error",
    "name": "LegacyPoolMustHaveOneDiscoveryPosition",
    "inputs": []
  },
  {
    "type": "error",
    "name": "MarketAlreadyGraduated",
    "inputs": []
  },
  {
    "type": "error",
    "name": "MarketNotGraduated",
    "inputs": []
  },
  {
    "type": "error",
    "name": "MaxShareToBeSoldExceeded",
    "inputs": [
      {
        "name": "value",
        "type": "uint256",
        "internalType": "uint256"
      },
      {
        "name": "limit",
        "type": "uint256",
        "internalType": "uint256"
      }
    ]
  },
  {
    "type": "error",
    "name": "NameIsRequired",
    "inputs": []
  },
  {
    "type": "error",
    "name": "NumDiscoveryPositionsOutOfRange",
    "inputs": []
  },
  {
    "type": "error",
    "name": "OnlyPool",
    "inputs": [
      {
        "name": "sender",
        "type": "address",
        "internalType": "address"
      },
      {
        "name": "pool",
        "type": "address",
        "internalType": "address"
      }
    ]
  },
  {
    "type": "error",
    "name": "OnlyWeth",
    "inputs": []
  },
  {
    "type": "error",
    "name": "SlippageBoundsExceeded",
    "inputs": []
  }
]